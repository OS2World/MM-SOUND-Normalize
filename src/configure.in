dnl Process this file with autoconf to produce a configure script.
AC_INIT(normalize.c)
AM_INIT_AUTOMAKE(normalize, 0.5.2)
AM_CONFIG_HEADER(config.h)

dnl Set of available languages.
ALL_LINGUAS="fr en_GB"

AC_CANONICAL_HOST
AC_PROG_CC
AC_ISC_POSIX
dnl AC_PROG_GCC_TRADITIONAL
AC_PROG_INSTALL

dnl Checks for headers
AC_STDC_HEADERS
AC_HAVE_HEADERS(string.h fcntl.h unistd.h byteswap.h sys/stat.h sys/mman.h locale.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
if test "$cross_compiling" = "yes"; then
    dnl Try to guess the endianness from the host cpu type
    case "$host_cpu" in
	i?86 | alpha ) ENDIAN=little;;
	*) ENDIAN=big; AC_DEFINE(WORDS_BIGENDIAN);;
    esac
    AC_MSG_WARN([I'm guessing that the target machine is ]$ENDIAN[-endian])
else
    AC_C_BIGENDIAN
fi

dnl Checks for libraries
AC_CHECK_LIB(m, sqrt)
AC_FUNC_MMAP
AC_CHECK_FUNCS(strerror strtod strchr memcpy gethostname)

dnl Word sizes...
if test "$cross_compiling" = yes -a "$ac_cv_sizeof_long" = ""; then
  # if cross-compiling, with no cached values, just assume something common. 
  ac_cv_sizeof_char=1
  ac_cv_sizeof_short=2
  ac_cv_sizeof_int=4
  ac_cv_sizeof_long=4
  AC_MSG_WARN([Cross-compiling, so cannot check type sizes; assuming short=2, int=4, long=4])
fi
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
SIZEOF_CHAR=$ac_cv_sizeof_char
SIZEOF_SHORT=$ac_cv_sizeof_short
SIZEOF_INT=$ac_cv_sizeof_int
SIZEOF_LONG=$ac_cv_sizeof_long

AC_MSG_CHECKING([for an 8-bit type])
if test $SIZEOF_CHAR -eq 1; then
    AC_DEFINE(TYPE8, char)
    TYPE8=char
elif test $SIZEOF_SHORT -eq 1; then
    AC_DEFINE(TYPE8, short)
    TYPE8=short
elif test $SIZEOF_INT -eq 1; then
    AC_DEFINE(TYPE8, int)
    TYPE8=int
elif test $SIZEOF_LONG -eq 1; then
    AC_DEFINE(TYPE8, long)
    TYPE8=long
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([You don't seem to have any 8-bit integer type])
fi
AC_MSG_RESULT($TYPE8)
AC_MSG_CHECKING([for a 16-bit type])
if test $SIZEOF_CHAR -eq 2; then
    AC_DEFINE(TYPE16, char)
    TYPE16=char
elif test $SIZEOF_SHORT -eq 2; then
    AC_DEFINE(TYPE16, short)
    TYPE16=short
elif test $SIZEOF_INT -eq 2; then
    AC_DEFINE(TYPE16, int)
    TYPE16=int
elif test $SIZEOF_LONG -eq 2; then
    AC_DEFINE(TYPE16, long)
    TYPE16=long
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([You don't seem to have any 16-bit integer type])
fi
AC_MSG_RESULT($TYPE16)
AC_MSG_CHECKING([for a 32-bit type])
if test $SIZEOF_CHAR -eq 4; then
    AC_DEFINE(TYPE32, char)
    TYPE32=char
elif test $SIZEOF_SHORT -eq 4; then
    AC_DEFINE(TYPE32, short)
    TYPE32=short
elif test $SIZEOF_INT -eq 4; then
    AC_DEFINE(TYPE32, int)
    TYPE32=int
elif test $SIZEOF_LONG -eq 4; then
    AC_DEFINE(TYPE32, long)
    TYPE32=long
else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([You don't seem to have any 32-bit integer type])
fi
AC_MSG_RESULT($TYPE32)

AC_CHECK_TYPE(int8_t, signed TYPE8)
AC_CHECK_TYPE(int16_t, signed TYPE16)
AC_CHECK_TYPE(int32_t, signed TYPE32)
AC_CHECK_TYPE(uint8_t, unsigned TYPE8)
AC_CHECK_TYPE(uint16_t, unsigned TYPE16)
AC_CHECK_TYPE(uint32_t, unsigned TYPE32)

AM_GNU_GETTEXT

AC_OUTPUT(Makefile normalize-mp3 intl/Makefile po/Makefile.in, [sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile; echo timestamp > stamp-h])
